Experiment 1: 
    Oct 7 @ 9:15 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 1) created for each actor upon instantiation
        - single level back, 4x4 layers
        - mutation rate: 0.1

    Output folder: o1

    Future experiments:
        - try a universal, single robust circuit template for each actor
        - try 3 levels back
        - lower mutation rate to 0.01

    Observations:
        - gradual decrease in complexity, but not nearly has drastic as previous experiments


Experiment 2: 
    Oct 7 @ 9:29 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 3) created for each actor upon instantiation
        - 3 level back, 4x4 layers
        - mutation rate: 0.01

    Output folder: o2

    Future experiments:
        - (try a universal, single robust circuit template for each actor)
        - try 1 level back, 4x4 layers with a 0.01 mutation rate
        - output fitness value alonside complexity
        - try on standard random generated circuit, non block
        - investigate payoff matrix
            - have same payouts with a negated converse for cases of cooperation when supposed to be competitive, and vice versa
            - reward proper instances of interactions the same, and penalize the same as well

    Observations:
        - casual fluxations in the complexity of every actor but the counterprotestors, who steadily decrease

Experiment 3: 
    Oct 7 @ 11:00 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 3) created for each actor upon instantiation
        - 3 level back, 4x4 layers
        - mutation rate: 0.01
        - payoff matrix has same payouts across instances of collaboration and cooperation

    Output folder: o3

    Future experiments:
        - larger initial population sizes (50 -> 100)

    CANCELED

Experiment 4: 
    Oct 8 @ 7:42 AM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 1) created for each actor upon instantiation
        - 1 level back, 4x4 layers
        - mutation rate: 0.01
        - payoff matrix has same payouts across instances of collaboration and cooperation

    Output folder: o4

    Future experiments:
        - larger initial population sizes (50 -> 100)

    Observations:
        - steady decrease in Police complexity, but everything else holding steady



Experiment 5: 
    Oct 8 @ 1:19 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 1) created for each actor upon instantiation
        - 1 level back, 4x4 layers
        - mutation rate: 0.01
        - payoff matrix has same payouts across instances of collaboration and cooperation
        - 100 population size

    Output folder: o5

    Future experiments:
        - different fitness measure?

    Observations:
        need more data

    COME BACK TO

Experiment 6: 
    Oct 8 @ 4:12 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 3) created for each actor upon instantiation
        - 3 level back, 4x4 layers
        - mutation rate: 0.01
        - payoff matrix has same payouts across instances of collaboration and cooperation
        - 50 population size

    Output folder: o3

    Continuation of EXPERIMENT 3

    Observations:
        - general logarithmic complexity trends for all, except for protestors, who drop off gradually
        

Experiment 7: 
    Oct 8 @ 7:45 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 3) created for each actor upon instantiation
        - 3 level back, 4x4 layers
        - mutation rate: 0.01
        - payoff matrix has same payouts across instances of collaboration and cooperation
        - 50 population size
        - Actor traits now have <1 probabilities

    Output folder: o7

    Future experiments:
        - try without mutating traits
        - find optimal strategy for actor and penalize based on how far off the actor is?
    
    Observations:
        - slight increase in complexity for all except Police (perhaps because Police actor only has two relationships?)

Experiment 8: 
    Oct 9 @ 6:48 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 3) created for each actor upon instantiation
        - 3 level back, 4x4 layers
        - mutation rate: 0.01
        - payoff matrix has same payouts across instances of collaboration and cooperation
        - 50 population size
        - Actor traits now have <1 probabilities
        - Running new activation and deactivation mutation scheme

    Output folder: o8

    Future experiments:
        - craft the network dimensions such that the number of nodes in the output layer is less than that of the preceeding layers
        - check the source of mutation_v2
            - remove "if G.value_bindings is not None:"

        - run on old payoff matrix

        - run over 5000 iterations

        - choose nodes to activate and deactivate based on positional probabilities
            https://www.annualreviews.org/doi/full/10.1146/annurev.micro.57.030502.090855
            https://jbiomedsci.biomedcentral.com/articles/10.1186/s12929-023-00959-7

    Observations:
        - Increase for all except public

    
Experiment 9: 
    Oct 10 @ 8:20 PM
    Random Genotype.random_genotype_m1(4, 0, 4, 4, 3) created for each actor upon instantiation
        - 3 level back, 4x4 layers
        - mutation rate: 0.01
        - payoff matrix has same payouts across instances of collaboration and cooperation
        - 50 population size
        - Actor traits now have <1 probabilities
        - Run over 5000 iterations
        - Running new activation and deactivation mutation scheme

    Output folder: o9

    Future experiments:
        - craft the network dimensions such that the number of nodes in the output layer is less than that of the preceeding layers
        - Have Layers_back = 1
        - check the source of mutation_v2
            - remove "if G.value_bindings is not None:"

        - run on old payoff matrix

        - choose nodes to activate and deactivate based on positional probabilities
            https://www.annualreviews.org/doi/full/10.1146/annurev.micro.57.030502.090855
            https://jbiomedsci.biomedcentral.com/articles/10.1186/s12929-023-00959-7
            https://www.google.com/search?q=adaptive+mutation&oq=adaptive+mutation&gs_lcrp=EgZjaHJvbWUqDAgAEAAYFBiHAhiABDIMCAAQABgUGIcCGIAEMg0IARAAGIMBGLEDGIAEMg0IAhAuGK8BGMcBGIAEMg0IAxAAGIMBGLEDGIAEMg0IBBAAGIMBGLEDGIAEMgcIBRAAGIAEMgYIBhBFGD0yBggHEEUYPdIBCDIxMTVqMGo0qAIAsAIA&sourceid=chrome&ie=UTF-8
            https://browse.arxiv.org/pdf/2102.11995.pdf
            https://www.nature.com/articles/35080556


        - Based on this paper: https://www.scitepress.org/Papers/2021/106400/106400.pdf
            - it might be best to initialize population with a single, optimal manually-created phenotype for each actor

        - Have o9 as random drift control, and NOP (manually-created phenotype) as comparison
        
        - Assign each node in circuit a weight, which affects its selection for activation or deactivation

        - link_to = random.choice([i for i in active if node_levels[i] > node_levels[to_activate] and node_levels[i] - node_levels[to_activate] <= G.levels_back])
            - errored out one time, need to check if possible active is empty, in which case simply return G

        - Normalize fitnesses

        - Find out how often a new node is created, when all others are activated

    Observations:
        - Steady increase in complexity!
    

Experiment 10:
    Oct 23 @ 7:43 PM

    Determining the average number of times an activation mutation must create a new node
        - 100 Genotype.random_genotype_m1(4, 0, 4, 4, 3) created, and for each genotype, 1000 random mutations performed
        
    Fixed index error bugs on link_to and n_g_level random.choice selections

    Observations:
        - On average, the genotype was completely activated only 16.79/1000 = 0.01679 percent of the time


Experiment 11:
    Oct 24 @ 5:47 PM

    Every instantiated has the same Genotype.random_genotype_m1(4, 0, 4, 4, 3) genotype
        - DEFAULT_GENOTYPE_2()
        - 5000 iterations

    Output folder: o10

    Future experiments:
        - run control on random genotype creation

    Observations:
        - A single, manually selected/curated genotype for every actor is not a driver of complexity at all


Experiment 12:
    Oct 27 @ 12:07 PM

    Running random drift control
        -  Random Genotype.random_genotype_m1(4, 0, 4, 4, 3) for every actor
        - 5000 iterations


    Output folder: o11

    
    